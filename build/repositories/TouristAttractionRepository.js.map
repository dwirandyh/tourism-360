{"version":3,"sources":["../../src/repositories/TouristAttractionRepository.js"],"names":["TouristAttractionRepository","req","options","page","pageSize","TouristAttractions","paginate","id","findOne","where","create","data","update","destroy","findAll","order"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;;;IAEMA,2B;;;;;;;;0FACiBC,G;;;;;;AACfC,uB,GAAU;AACZC,wBAAM,oBAAKF,GAAL,CADM;AAEZG,4BAAUA;AAFE,iB;;uBAIDC,2BAAmBC,QAAnB,CAA4BJ,OAA5B,C;;;;;;;;;;;;;;;;;;;;;;4FAGKD,G,EAAKC,O;;;;;AACvBA,uCACKA,OADL;AAEEC,wBAAM,oBAAKF,GAAL,CAFR;AAGEG,4BAAUA;AAHZ;;uBAKaC,2BAAmBC,QAAnB,CAA4BJ,OAA5B,C;;;;;;;;;;;;;;;;;;;;;;4FAGKK,E;;;;;;uBACLF,2BAAmBG,OAAnB,CAA2B;AACtCC,yBAAO;AACLF,wBAAIA;AADC;AAD+B,iBAA3B,C;;;;;;;;;;;;;;;;;;;;;;4FAOKL,O;;;;;;uBACLG,2BAAmBK,MAAnB,CAA0BR,OAA1B,C;;;;;;;;;;;;;;;;;;;;;;4FAGKS,I,EAAMT,O;;;;;;uBACXG,2BAAmBO,MAAnB,CAA0BD,IAA1B,EAAgCT,OAAhC,C;;;;;;;;;;;;;;;;;;;;;;4FAGMA,O;;;;;;uBACNG,2BAAmBQ,OAAnB,CAA2BX,OAA3B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIAG,2BAAmBS,OAAnB,CAA2B;AACtCC,yBAAO,CAAC,CAAC,MAAD,EAAS,MAAT,CAAD;AAD+B,iBAA3B,C;;;;;;;;;;;;;;;;;;;;;;4FAKeb,O;;;;;;uBACfG,2BAAmBS,OAAnB,CAA2BZ,OAA3B,C;;;;;;;;;;;;;;;;;;;;;;;;kBAGFF,2B","file":"TouristAttractionRepository.js","sourcesContent":["import { TouristAttractions } from \"../database/models\";\r\nimport { page, pageSize } from \"../helpers/Paginate\";\r\n\r\nclass TouristAttractionRepository {\r\n  static async getData(req) {\r\n    let options = {\r\n      page: page(req),\r\n      pageSize: pageSize\r\n    };\r\n    return await TouristAttractions.paginate(options);\r\n  }\r\n\r\n  static async search(req, options) {\r\n    options = {\r\n      ...options,\r\n      page: page(req),\r\n      pageSize: pageSize\r\n    };\r\n    return await TouristAttractions.paginate(options);\r\n  }\r\n\r\n  static async detail(id) {\r\n    return await TouristAttractions.findOne({\r\n      where: {\r\n        id: id\r\n      }\r\n    });\r\n  }\r\n\r\n  static async create(options) {\r\n    return await TouristAttractions.create(options);\r\n  }\r\n\r\n  static async update(data, options) {\r\n    return await TouristAttractions.update(data, options);\r\n  }\r\n\r\n  static async destroy(options) {\r\n    return await TouristAttractions.destroy(options);\r\n  }\r\n\r\n  static async popular() {\r\n    return await TouristAttractions.findAll({\r\n      order: [[\"view\", \"DESC\"]]\r\n    });\r\n  }\r\n\r\n  static async searchAttraction(options) {\r\n    return await TouristAttractions.findAll(options);\r\n  }\r\n}\r\nexport default TouristAttractionRepository;\r\n"]}